{
  "name": "motorway-task",
  "version": "1.0.0",
  "description": "This is a simple API that reads for a preseeded database table and returns all the rows in JSON format, using Express and Sequelize.",
  "main": "server.js",
  "scripts": {
    "setup": "npm run create:db && npm run migrate && npm run seed && npm run start",
    "create:db": "cd database && npx sequelize-cli db:create && cd ..",
    "create:model": "npx sequelize-cli model:generate --name Vehicle --attributes make:string,model:string",
    "create:seeder": "npx sequelize-cli seed:generate --name dummy-data-vehicles",
    "migrate": "cd database && npx sequelize-cli db:migrate && cd ..",
    "seed": "cd database && npx sequelize-cli db:seed:all && cd ..",
    "start": "node ./network/server.js",
    "start:dev": "npx nodemon ./network/server.js",
    "test": "node node_modules/.bin/jest --coverage --detectOpenHandles",
    "test:handlers": "npx jest ./router/handlers/vehiclesHandlers.test.js --detectOpenHandles",
    "test:routes": "npx jest ./router/vehiclesRouter.test.js --detectOpenHandles"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Jacint-M-David/motorway-backend-task-jacint-m-david.git"
  },
  "keywords": [
    "api",
    "read",
    "database",
    "table",
    "json",
    "vehicles"
  ],
  "author": "Jacint M. David",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/Jacint-M-David/motorway-backend-task-jacint-m-david/issues"
  },
  "homepage": "https://github.com/Jacint-M-David/motorway-backend-task-jacint-m-david#readme",
  "dependencies": {
    "express": "^4.18.1",
    "pg": "^8.7.3",
    "pg-hstore": "^2.3.4",
    "sequelize": "^6.19.2",
    "sequelize-cli": "^6.4.1"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-airbnb": "^19.0.4",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-jsx-a11y": "^6.5.1",
    "eslint-plugin-react": "^7.29.4",
    "eslint-plugin-react-hooks": "^4.5.0",
    "jest": "^28.1.0",
    "nodemon": "^2.0.16",
    "supertest": "^6.2.3"
  }
}
